@model List<ServicesCenterV3._1.Models.UserRolesViewModel>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Користувачі";
}

<h2 class="text-primary mb-4">Керування користувачами</h2>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <a href="/Identity/Account/Register" class="btn btn-success">
            <i class="bi bi-plus-lg me-1"></i> Додати користувача
        </a>
    </div>
</div>

<table class="table table-hover table-striped align-middle border shadow-sm rounded">
    <thead class="table-dark">
        <tr>
            <th>Дані користувача</th>
            <th>Ролі</th>
            <th>Дії</th>
        </tr>
    </thead>
    <tbody id="userTable">
        @foreach (var user in Model)
        {
            <tr class="user-row" data-user-id="@user.UserId"         
                    data-user-name="@user.Name" 
                    data-user-lastname="@user.Lastname" 
                    data-user-email="@user.Email" 
                    data-user-databith="@user.DataBith" 
                    data-roles="@string.Join(",", user.Roles)">
                <td class="fw-bold text-secondary">
                    <div class="d-flex flex-column text-start">
                        <span><strong>Ім'я:</strong> @user.Name @user.Lastname</span>
                        <span><strong>Дата нар.:</strong> @user.DataBith.ToShortDateString()</span>
                        <span><strong>Email:</strong> @user.Email</span>
                    </div>
                </td>
                <td>
                    <div class="d-flex flex-wrap justify-content-center">
                        @foreach (var role in ViewBag.Roles)
                        {
                            var isSelected = user.Roles.Contains(role.Name);
                            <div class="form-check me-3 mb-2">
                                <span class="badge bg-@(isSelected ? "success" : "secondary")">
                                    @role.Name
                                </span>
                            </div>
                        }
                    </div>
                </td>
                <td class="text-center">
                    <div class="d-flex justify-content-center">
                        <button class="btn btn-outline-primary btn-sm me-2" onclick="openEditUserModal(this)">
                            <i class="bi bi-pencil-square me-1"></i>Редагування
                        </button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content rounded-3 shadow">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Редагування користувача</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm">
                    <input type="hidden" id="userId" />

                    <div class="mb-3">
                        <label for="userName" class="form-label">Ім'я</label>
                        <input type="text" class="form-control" id="userName" placeholder="Введіть ім'я" required />
                    </div>

                    <div class="mb-3">
                        <label for="userLastname" class="form-label">Прізвище</label>
                        <input type="text" class="form-control" id="userLastname" placeholder="Введіть прізвище" required />
                    </div>

                    <div class="mb-3">
                        <label for="userEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="userEmail" placeholder="Введіть електронну пошту" required />
                    </div>

                    <div class="mb-3">
                        <label for="userDataBith" class="form-label">Дата народження</label>
                        <input type="date" class="form-control" id="userDataBith" required max="@DateTime.Now.AddYears(-18).ToString("yyyy-MM-dd")" />
                    </div>

                    <div class="mb-3 d-flex justify-content-between">
                        <button type="button" class="btn btn-primary" onclick="saveUser()">Зберегти</button>
                        <button type="button" class="btn btn-secondary" onclick="$('#editUserModal').modal('hide')">Скасувати</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function openEditUserModal(button) {
        const row = button.closest('.user-row');
        document.getElementById('userId').value = row.getAttribute('data-user-id');
        document.getElementById('userName').value = row.getAttribute('data-user-name');
        document.getElementById('userLastname').value = row.getAttribute('data-user-lastname');
        document.getElementById('userEmail').value = row.getAttribute('data-user-email');
        document.getElementById('userDataBith').value = row.getAttribute('data-user-databith').split('T')[0];

        $('#editUserModal').modal('show');
    }

    function saveUser() {
        const userId = document.getElementById('userId').value;
        const userName = document.getElementById('userName').value;
        const userLastname = document.getElementById('userLastname').value;
        const userEmail = document.getElementById('userEmail').value;
        const userDataBith = document.getElementById('userDataBith').value;

        fetch('/Admin/EditUser', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ userId, userName, userLastname, userEmail, userDataBith })
        })
            .then(response => {
                if (!response.ok) {
                    alert('Помилка при збереженні даних користувача');
                } else {
                    alert('Дані користувача успішно оновлено');
                    $('#editUserModal').modal('hide');
                    location.reload(); // Обновите страницу, чтобы увидеть изменения
                }
            })
            .catch(error => {
                alert('Сталася помилка: ' + error);
            });
    }
</script>

<style>
    /* Стилі залишаються без змін */
    .modal-content {
        border: 1px solid #e0e0e0;
        background-color: #f8f9fa;
    }

    .modal-header {
        background-color: #007bff;
        color: white;
    }

    .modal-body {
        font-size: 1.1rem;
    }

    .btn-primary {
        background-color: #0069d9;
        border: none;
    }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f5f9;
    }

    .badge {
        font-size: 0.85em;
    }
</style>
